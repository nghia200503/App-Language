import "./Home.css"; 
import { useEffect } from "react";
import { useNavigate } from "react-router-dom";

function Home() {
  const navigate = useNavigate();
  const handleLogin = () => {
    navigate("/login");
  };
  const handleRegister = () => {
    navigate("/register");
  };

  useEffect(() => {
    const handleClick = (e) => {
      const anchor = e.target.closest('a[href^="#"]');
      if (anchor) {
        e.preventDefault();
        const target = document.querySelector(anchor.getAttribute("href"));
        if (target) {
          target.scrollIntoView({ behavior: "smooth", block: "start" });
        }
      }
    };
    document.addEventListener("click", handleClick);
    return () => document.removeEventListener("click", handleClick);
  }, []);

  useEffect(() => {
    const observerOptions = { threshold: 0.1, rootMargin: "0px 0px -50px 0px" };
    const observer = new window.IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("visible");
        }
      });
    }, observerOptions);

    const elements = document.querySelectorAll(".fade-in");
    elements.forEach((el) => observer.observe(el));

    return () => observer.disconnect();
  }, []);

  function animateCounter(element) {
    const target = parseInt(element.getAttribute("data-target"));
    const increment = target / 100;
    let current = 0;
    const timer = setInterval(() => {
      current += increment;
      if (current >= target) {
        current = target;
        clearInterval(timer);
      }
      element.textContent = Math.floor(current).toLocaleString();
    }, 20);
  }

  useEffect(() => {
    const statsObserver = new window.IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const counters = entry.target.querySelectorAll(".stat-number");
            counters.forEach((counter) => animateCounter(counter));
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.5 }
    );

    const statsSection = document.querySelector(".statistics");
    if (statsSection) statsObserver.observe(statsSection);

    return () => statsObserver.disconnect();
  }, []);

  useEffect(() => {
    const cards = document.querySelectorAll(
      ".benefit-card, .feature-item, .stat-card"
    );
    const handleEnter = function () {
      this.style.transform = this.classList.contains("stat-card")
        ? "scale(1.05)"
        : "translateY(-10px)";
    };
    const handleLeave = function () {
      this.style.transform = "translateY(0) scale(1)";
    };
    cards.forEach((card) => {
      card.addEventListener("mouseenter", handleEnter);
      card.addEventListener("mouseleave", handleLeave);
    });
    return () => {
      cards.forEach((card) => {
        card.removeEventListener("mouseenter", handleEnter);
        card.removeEventListener("mouseleave", handleLeave);
      });
    };
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      const scrolled = window.pageYOffset;
      const shapes = document.querySelectorAll(".floating-shape");
      shapes.forEach((shape, index) => {
        const speed = 0.5 + index * 0.2;
        shape.style.transform = `translateY(${scrolled * speed}px) rotate(${
          scrolled * 0.1
        }deg)`;
      });
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    window.addEventListener("load", () => {
      document.body.style.opacity = "1";
    });
  }, []);

  return (
    <div>
      {/* Animated Background */}
      <div className="bg-animation">
        <div className="floating-shape shape-1"></div>
        <div className="floating-shape shape-2"></div>
        <div className="floating-shape shape-3"></div>
        <div className="floating-shape shape-4"></div>
        <div className="floating-shape shape-5"></div>
      </div>

      {/* Header */}
      <header>
        <div className="header-content">
          <h1>Ch√†o m·ª´ng ƒë·∫øn v·ªõi LearnX</h1>
          <p>
            N·ªÅn t·∫£ng h·ªçc ti·∫øng Anh to√†n di·ªán, th√¥ng minh v√† hi·ªáu qu·∫£ cho m·ªçi
            ng∆∞·ªùi
          </p>
        </div>
      </header>

      {/* Intro Section */}
      <section id="intro" className="intro fade-in">
        <h2>H·ªçc ti·∫øng Anh th√¥ng minh, hi·ªáu qu·∫£</h2>
        <p>
          LearnX ƒë∆∞·ª£c x√¢y d·ª±ng v·ªõi s·ª© m·ªánh gi√∫p m·ªçi ng∆∞·ªùi chinh ph·ª•c ti·∫øng Anh
          m·ªôt c√°ch d·ªÖ d√†ng, vui v·∫ª v√† hi·ªáu qu·∫£ nh·∫•t. Ch√∫ng t√¥i hi·ªÉu r·∫±ng m·ªói
          ng∆∞·ªùi c√≥ t·ªëc ƒë·ªô v√† phong c√°ch h·ªçc kh√°c nhau ‚Äì v√¨ v·∫≠y LearnX cung c·∫•p
          l·ªô tr√¨nh h·ªçc t·∫≠p
          <strong> c√° nh√¢n h√≥a</strong>, ph√π h·ª£p t·ª´ ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu ƒë·∫øn ng∆∞·ªùi
          h·ªçc n√¢ng cao.
        </p>
        <p>
          Kh√¥ng ch·ªâ l√† n∆°i h·ªçc t·ª´ v·ª±ng v√† ng·ªØ ph√°p, LearnX mang ƒë·∫øn m·ªôt tr·∫£i
          nghi·ªám h·ªçc ng√¥n ng·ªØ to√†n di·ªán v·ªõi c√°c ph∆∞∆°ng ph√°p hi·ªán ƒë·∫°i nh·∫•t, ƒë∆∞·ª£c
          h·ªó tr·ª£ b·ªüi c√¥ng ngh·ªá AI ti√™n ti·∫øn.
        </p>
        <em>
          "V·ªõi LearnX, ti·∫øng Anh kh√¥ng c√≤n l√† r√†o c·∫£n ‚Äì m√† l√† c√¥ng c·ª• m·ªü ra
          t∆∞∆°ng lai m·ªõi."
        </em>
      </section>

      {/* Benefits Section */}
      <section id="benefits" className="benefits fade-in">
        <h2>L·ª£i √≠ch n·ªïi b·∫≠t</h2>
        <div className="benefits-grid">
          <div className="benefit-card">
            <div className="benefit-icon">üìö</div>
            <h3>Kho b√†i h·ªçc phong ph√∫</h3>
            <p>
              H∆°n 250+ b√†i h·ªçc ƒë∆∞·ª£c x√¢y d·ª±ng theo chu·∫©n CEFR qu·ªëc t·∫ø, t·ª´ c∆° b·∫£n
              ƒë·∫øn n√¢ng cao
            </p>
          </div>
          <div className="benefit-card">
            <div className="benefit-icon">üß†</div>
            <h3>C√¥ng ngh·ªá h·ªçc th√¥ng minh</h3>
            <p>
              S·ª≠ d·ª•ng flashcard v√† ph∆∞∆°ng ph√°p l·∫∑p l·∫°i ng·∫Øt qu√£ng gi√∫p ghi nh·ªõ
              t·ª´ v·ª±ng hi·ªáu qu·∫£
            </p>
          </div>
          <div className="benefit-card">
            <div className="benefit-icon">üé§</div>
            <h3>Luy·ªán ph√°t √¢m chu·∫©n</h3>
            <p>
              C√¥ng ngh·ªá nh·∫≠n di·ªán gi·ªçng n√≥i AI gi√∫p b·∫°n ph√°t √¢m chu·∫©n nh∆∞ ng∆∞·ªùi
              b·∫£n x·ª©
            </p>
          </div>
          <div className="benefit-card">
            <div className="benefit-icon">‚ö°</div>
            <h3>Ph·∫£n h·ªìi t·ª©c th√¨</h3>
            <p>Nh·∫≠n k·∫øt qu·∫£ v√† g·ª£i √Ω c·∫£i thi·ªán ngay l·∫≠p t·ª©c sau m·ªói b√†i t·∫≠p</p>
          </div>
          <div className="benefit-card">
            <div className="benefit-icon">üìä</div>
            <h3>Theo d√µi ti·∫øn ƒë·ªô</h3>
            <p>
              Dashboard chi ti·∫øt gi√∫p b·∫°n theo d√µi qu√° tr√¨nh h·ªçc v√† ƒëi·ªÅu ch·ªânh
              k·∫ø ho·∫°ch
            </p>
          </div>
          <div className="benefit-card">
            <div className="benefit-icon">üéØ</div>
            <h3>C√° nh√¢n h√≥a h·ªçc t·∫≠p</h3>
            <p>
              AI ƒë·ªÅ xu·∫•t n·ªôi dung ph√π h·ª£p d·ª±a tr√™n nƒÉng l·ª±c v√† m·ª•c ti√™u c·ªßa b·∫°n
            </p>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section id="features" className="features fade-in">
        <h2>T√≠nh nƒÉng ƒë·∫∑c bi·ªát</h2>
        <div className="features-grid">
          <div className="feature-item">
            <div className="feature-icon">üí¨</div>
            <div className="feature-content">
              <h3>Luy·ªán h·ªôi tho·∫°i AI</h3>
              <p>
                Tr√≤ chuy·ªán v·ªõi AI ƒë·ªÉ c·∫£i thi·ªán k·ªπ nƒÉng giao ti·∫øp trong c√°c t√¨nh
                hu·ªëng th·ª±c t·∫ø
              </p>
            </div>
          </div>
          <div className="feature-item">
            <div className="feature-icon">üéÆ</div>
            <div className="feature-content">
              <h3>H·ªçc qua game</h3>
              <p>
                C√°c mini-game th√∫ v·ªã gi√∫p vi·ªác h·ªçc tr·ªü n√™n vui v·∫ª v√† kh√¥ng nh√†m
                ch√°n
              </p>
            </div>
          </div>
          <div className="feature-item">
            <div className="feature-icon">üåç</div>
            <div className="feature-content">
              <h3>C·ªông ƒë·ªìng h·ªçc t·∫≠p</h3>
              <p>
                K·∫øt n·ªëi v·ªõi h√†ng ng√†n ng∆∞·ªùi h·ªçc kh√°c, tham gia th·ª≠ th√°ch v√† chia
                s·∫ª kinh nghi·ªám
              </p>
            </div>
          </div>
          <div className="feature-item">
            <div className="feature-icon">üì±</div>
            <div className="feature-content">
              <h3>H·ªçc m·ªçi l√∫c m·ªçi n∆°i</h3>
              <p>
                ·ª®ng d·ª•ng mobile ho·∫°t ƒë·ªông offline, gi√∫p b·∫°n h·ªçc t·∫≠p ngay c·∫£ khi
                kh√¥ng c√≥ internet
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="cta fade-in">
        <h2>Tham gia c√πng h√†ng ng√†n ng∆∞·ªùi h·ªçc kh√°c</h2>
        <p>B·∫Øt ƒë·∫ßu h√†nh tr√¨nh chinh ph·ª•c ti·∫øng Anh c·ªßa b·∫°n ngay h√¥m nay!</p>
        <div className="cta-buttons">
          <button className="btn btn-secondary" onClick={handleLogin}>
            üîê ƒêƒÉng nh·∫≠p
          </button>
          <button className="btn btn-accent" onClick={handleRegister}>
            üìù ƒêƒÉng k√Ω ngay
          </button>
        </div>
      </section>

      {/* Statistics Section */}
      <section id="stats" className="statistics fade-in">
        <h2>Th·ªëng k√™ ·∫•n t∆∞·ª£ng</h2>
        <div className="stats-grid">
          <div className="stat-card">
            <div className="stat-content">
              <div className="stat-number" data-target="3500">
                0
              </div>
              <div className="stat-label">T·ª´ v·ª±ng trong kho</div>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-content">
              <div className="stat-number" data-target="12000">
                0
              </div>
              <div className="stat-label">Ng∆∞·ªùi h·ªçc ƒëang s·ª≠ d·ª•ng</div>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-content">
              <div className="stat-number" data-target="250">
                0
              </div>
              <div className="stat-label">B√†i h·ªçc ƒë√£ x√¢y d·ª±ng</div>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-content">
              <div className="stat-number" data-target="20">
                0
              </div>
              <div className="stat-label">Ph√∫t h·ªçc trung b√¨nh/ng√†y</div>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}

export default Home;